

"use strict";

var _interopRequireDefault = require("babel-runtime/helpers/interop-require-default")["default"];

var _index = require("./index");

var _index2 = _interopRequireDefault(_index);

_index2["default"]("AwaitExpression", {
  builder: ["argument"],
  visitor: ["argument"],
  aliases: ["Expression", "Terminatorless"],
  fields: {
    argument: {
      validate: _index.assertNodeType("Expression")
    }
  }
});

_index2["default"]("BindExpression", {
  visitor: ["object", "callee"],
  fields: {
    // todo
  }
});

_index2["default"]("Decorator", {
  visitor: ["expression"],
  fields: {
    expression: {
      validate: _index.assertNodeType("Expression")
    }
  }
});

_index2["default"]("DoExpression", {
  visitor: ["body"],
  aliases: ["Expression"],
  fields: {
    body: {
      validate: _index.assertNodeType("BlockStatement")
    }
  }
});

_index2["default"]("ExportDefaultSpecifier", {
  visitor: ["exported"],
  aliases: ["ModuleSpecifier"],
  fields: {
    exported: {
      validate: _index.assertNodeType("Identifier")
    }
  }
});

_index2["default"]("ExportNamespaceSpecifier", {
  visitor: ["exported"],
  aliases: ["ModuleSpecifier"],
  fields: {
    exported: {
      validate: _index.assertNodeType("Identifier")
    }
  }
});

_index2["default"]("RestProperty", {
  visitor: ["argument"],
  aliases: ["UnaryLike"],
  fields: {
    argument: {
      validate: _index.assertNodeType("LVal")
    }
  }
});

_index2["default"]("SpreadProperty", {
  visitor: ["argument"],
  aliases: ["UnaryLike"],
  fields: {
    argument: {
      validate: _index.assertNodeType("Expression")
    }
  }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9uYXZlci8uYXRvbS9wYWNrYWdlcy9idWlsZC1ndWxwL3NwZWMvZml4dHVyZS9ub2RlX21vZHVsZXNfYmFiZWwvYmFiZWwtdHlwZXMvbGliL2RlZmluaXRpb25zL2V4cGVyaW1lbnRhbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUVBLFlBQVksQ0FBQzs7QUFFYixJQUFJLHNCQUFzQixHQUFHLE9BQU8sQ0FBQywrQ0FBK0MsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDOztBQUVqRyxJQUFJLE1BQU0sR0FBRyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUM7O0FBRWhDLElBQUksT0FBTyxHQUFHLHNCQUFzQixDQUFDLE1BQU0sQ0FBQyxDQUFDOztBQUU3QyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsaUJBQWlCLEVBQUU7QUFDcEMsU0FBTyxFQUFFLENBQUMsVUFBVSxDQUFDO0FBQ3JCLFNBQU8sRUFBRSxDQUFDLFVBQVUsQ0FBQztBQUNyQixTQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsZ0JBQWdCLENBQUM7QUFDekMsUUFBTSxFQUFFO0FBQ04sWUFBUSxFQUFFO0FBQ1IsY0FBUSxFQUFFLE1BQU0sQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUFDO0tBQzlDO0dBQ0Y7Q0FDRixDQUFDLENBQUM7O0FBRUgsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDLGdCQUFnQixFQUFFO0FBQ25DLFNBQU8sRUFBRSxDQUFDLFFBQVEsRUFBRSxRQUFRLENBQUM7QUFDN0IsUUFBTSxFQUFFOztHQUVQO0NBQ0YsQ0FBQyxDQUFDOztBQUVILE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxXQUFXLEVBQUU7QUFDOUIsU0FBTyxFQUFFLENBQUMsWUFBWSxDQUFDO0FBQ3ZCLFFBQU0sRUFBRTtBQUNOLGNBQVUsRUFBRTtBQUNWLGNBQVEsRUFBRSxNQUFNLENBQUMsY0FBYyxDQUFDLFlBQVksQ0FBQztLQUM5QztHQUNGO0NBQ0YsQ0FBQyxDQUFDOztBQUVILE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxjQUFjLEVBQUU7QUFDakMsU0FBTyxFQUFFLENBQUMsTUFBTSxDQUFDO0FBQ2pCLFNBQU8sRUFBRSxDQUFDLFlBQVksQ0FBQztBQUN2QixRQUFNLEVBQUU7QUFDTixRQUFJLEVBQUU7QUFDSixjQUFRLEVBQUUsTUFBTSxDQUFDLGNBQWMsQ0FBQyxnQkFBZ0IsQ0FBQztLQUNsRDtHQUNGO0NBQ0YsQ0FBQyxDQUFDOztBQUVILE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyx3QkFBd0IsRUFBRTtBQUMzQyxTQUFPLEVBQUUsQ0FBQyxVQUFVLENBQUM7QUFDckIsU0FBTyxFQUFFLENBQUMsaUJBQWlCLENBQUM7QUFDNUIsUUFBTSxFQUFFO0FBQ04sWUFBUSxFQUFFO0FBQ1IsY0FBUSxFQUFFLE1BQU0sQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUFDO0tBQzlDO0dBQ0Y7Q0FDRixDQUFDLENBQUM7O0FBRUgsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDLDBCQUEwQixFQUFFO0FBQzdDLFNBQU8sRUFBRSxDQUFDLFVBQVUsQ0FBQztBQUNyQixTQUFPLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQztBQUM1QixRQUFNLEVBQUU7QUFDTixZQUFRLEVBQUU7QUFDUixjQUFRLEVBQUUsTUFBTSxDQUFDLGNBQWMsQ0FBQyxZQUFZLENBQUM7S0FDOUM7R0FDRjtDQUNGLENBQUMsQ0FBQzs7QUFFSCxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsY0FBYyxFQUFFO0FBQ2pDLFNBQU8sRUFBRSxDQUFDLFVBQVUsQ0FBQztBQUNyQixTQUFPLEVBQUUsQ0FBQyxXQUFXLENBQUM7QUFDdEIsUUFBTSxFQUFFO0FBQ04sWUFBUSxFQUFFO0FBQ1IsY0FBUSxFQUFFLE1BQU0sQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDO0tBQ3hDO0dBQ0Y7Q0FDRixDQUFDLENBQUM7O0FBRUgsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDLGdCQUFnQixFQUFFO0FBQ25DLFNBQU8sRUFBRSxDQUFDLFVBQVUsQ0FBQztBQUNyQixTQUFPLEVBQUUsQ0FBQyxXQUFXLENBQUM7QUFDdEIsUUFBTSxFQUFFO0FBQ04sWUFBUSxFQUFFO0FBQ1IsY0FBUSxFQUFFLE1BQU0sQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUFDO0tBQzlDO0dBQ0Y7Q0FDRixDQUFDLENBQUMiLCJmaWxlIjoiL1VzZXJzL25hdmVyLy5hdG9tL3BhY2thZ2VzL2J1aWxkLWd1bHAvc3BlYy9maXh0dXJlL25vZGVfbW9kdWxlc19iYWJlbC9iYWJlbC10eXBlcy9saWIvZGVmaW5pdGlvbnMvZXhwZXJpbWVudGFsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogQGZsb3cgKi9cblxuXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0ID0gcmVxdWlyZShcImJhYmVsLXJ1bnRpbWUvaGVscGVycy9pbnRlcm9wLXJlcXVpcmUtZGVmYXVsdFwiKVtcImRlZmF1bHRcIl07XG5cbnZhciBfaW5kZXggPSByZXF1aXJlKFwiLi9pbmRleFwiKTtcblxudmFyIF9pbmRleDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9pbmRleCk7XG5cbl9pbmRleDJbXCJkZWZhdWx0XCJdKFwiQXdhaXRFeHByZXNzaW9uXCIsIHtcbiAgYnVpbGRlcjogW1wiYXJndW1lbnRcIl0sXG4gIHZpc2l0b3I6IFtcImFyZ3VtZW50XCJdLFxuICBhbGlhc2VzOiBbXCJFeHByZXNzaW9uXCIsIFwiVGVybWluYXRvcmxlc3NcIl0sXG4gIGZpZWxkczoge1xuICAgIGFyZ3VtZW50OiB7XG4gICAgICB2YWxpZGF0ZTogX2luZGV4LmFzc2VydE5vZGVUeXBlKFwiRXhwcmVzc2lvblwiKVxuICAgIH1cbiAgfVxufSk7XG5cbl9pbmRleDJbXCJkZWZhdWx0XCJdKFwiQmluZEV4cHJlc3Npb25cIiwge1xuICB2aXNpdG9yOiBbXCJvYmplY3RcIiwgXCJjYWxsZWVcIl0sXG4gIGZpZWxkczoge1xuICAgIC8vIHRvZG9cbiAgfVxufSk7XG5cbl9pbmRleDJbXCJkZWZhdWx0XCJdKFwiRGVjb3JhdG9yXCIsIHtcbiAgdmlzaXRvcjogW1wiZXhwcmVzc2lvblwiXSxcbiAgZmllbGRzOiB7XG4gICAgZXhwcmVzc2lvbjoge1xuICAgICAgdmFsaWRhdGU6IF9pbmRleC5hc3NlcnROb2RlVHlwZShcIkV4cHJlc3Npb25cIilcbiAgICB9XG4gIH1cbn0pO1xuXG5faW5kZXgyW1wiZGVmYXVsdFwiXShcIkRvRXhwcmVzc2lvblwiLCB7XG4gIHZpc2l0b3I6IFtcImJvZHlcIl0sXG4gIGFsaWFzZXM6IFtcIkV4cHJlc3Npb25cIl0sXG4gIGZpZWxkczoge1xuICAgIGJvZHk6IHtcbiAgICAgIHZhbGlkYXRlOiBfaW5kZXguYXNzZXJ0Tm9kZVR5cGUoXCJCbG9ja1N0YXRlbWVudFwiKVxuICAgIH1cbiAgfVxufSk7XG5cbl9pbmRleDJbXCJkZWZhdWx0XCJdKFwiRXhwb3J0RGVmYXVsdFNwZWNpZmllclwiLCB7XG4gIHZpc2l0b3I6IFtcImV4cG9ydGVkXCJdLFxuICBhbGlhc2VzOiBbXCJNb2R1bGVTcGVjaWZpZXJcIl0sXG4gIGZpZWxkczoge1xuICAgIGV4cG9ydGVkOiB7XG4gICAgICB2YWxpZGF0ZTogX2luZGV4LmFzc2VydE5vZGVUeXBlKFwiSWRlbnRpZmllclwiKVxuICAgIH1cbiAgfVxufSk7XG5cbl9pbmRleDJbXCJkZWZhdWx0XCJdKFwiRXhwb3J0TmFtZXNwYWNlU3BlY2lmaWVyXCIsIHtcbiAgdmlzaXRvcjogW1wiZXhwb3J0ZWRcIl0sXG4gIGFsaWFzZXM6IFtcIk1vZHVsZVNwZWNpZmllclwiXSxcbiAgZmllbGRzOiB7XG4gICAgZXhwb3J0ZWQ6IHtcbiAgICAgIHZhbGlkYXRlOiBfaW5kZXguYXNzZXJ0Tm9kZVR5cGUoXCJJZGVudGlmaWVyXCIpXG4gICAgfVxuICB9XG59KTtcblxuX2luZGV4MltcImRlZmF1bHRcIl0oXCJSZXN0UHJvcGVydHlcIiwge1xuICB2aXNpdG9yOiBbXCJhcmd1bWVudFwiXSxcbiAgYWxpYXNlczogW1wiVW5hcnlMaWtlXCJdLFxuICBmaWVsZHM6IHtcbiAgICBhcmd1bWVudDoge1xuICAgICAgdmFsaWRhdGU6IF9pbmRleC5hc3NlcnROb2RlVHlwZShcIkxWYWxcIilcbiAgICB9XG4gIH1cbn0pO1xuXG5faW5kZXgyW1wiZGVmYXVsdFwiXShcIlNwcmVhZFByb3BlcnR5XCIsIHtcbiAgdmlzaXRvcjogW1wiYXJndW1lbnRcIl0sXG4gIGFsaWFzZXM6IFtcIlVuYXJ5TGlrZVwiXSxcbiAgZmllbGRzOiB7XG4gICAgYXJndW1lbnQ6IHtcbiAgICAgIHZhbGlkYXRlOiBfaW5kZXguYXNzZXJ0Tm9kZVR5cGUoXCJFeHByZXNzaW9uXCIpXG4gICAgfVxuICB9XG59KTsiXX0=
//# sourceURL=/Users/naver/.atom/packages/build-gulp/spec/fixture/node_modules_babel/babel-types/lib/definitions/experimental.js
