

"use strict";

var _interopRequireDefault = require("babel-runtime/helpers/interop-require-default")["default"];

var _index = require("./index");

var _index2 = _interopRequireDefault(_index);

_index2["default"]("JSXAttribute", {
  visitor: ["name", "value"],
  aliases: ["JSX", "Immutable"],
  fields: {
    name: {
      validate: _index.assertNodeType("JSXIdentifier", "JSXMemberExpression")
    },
    value: {
      optional: true,
      validate: _index.assertNodeType("JSXElement", "StringLiteral", "JSXExpressionContainer")
    }
  }
});

_index2["default"]("JSXClosingElement", {
  visitor: ["name"],
  aliases: ["JSX", "Immutable"],
  fields: {
    name: {
      validate: _index.assertNodeType("JSXIdentifier", "JSXMemberExpression")
    }
  }
});

_index2["default"]("JSXElement", {
  builder: ["openingElement", "closingElement", "children", "selfClosing"],
  visitor: ["openingElement", "children", "closingElement"],
  aliases: ["JSX", "Immutable", "Expression"],
  fields: {
    openingElement: {
      validate: _index.assertNodeType("JSXOpeningElement")
    },
    closingElement: {
      optional: true,
      validate: _index.assertNodeType("JSXClosingElement")
    },
    children: {
      // todo
    }
  }
});

_index2["default"]("JSXEmptyExpression", {
  aliases: ["JSX", "Expression"]
});

_index2["default"]("JSXExpressionContainer", {
  visitor: ["expression"],
  aliases: ["JSX", "Immutable"],
  fields: {
    expression: {
      validate: _index.assertNodeType("Expression")
    }
  }
});

_index2["default"]("JSXIdentifier", {
  builder: ["name"],
  aliases: ["JSX", "Expression"],
  fields: {
    name: {
      validate: _index.assertValueType("string")
    }
  }
});

_index2["default"]("JSXMemberExpression", {
  visitor: ["object", "property"],
  aliases: ["JSX", "Expression"],
  fields: {
    object: {
      validate: _index.assertNodeType("JSXIdentifier")
    },
    property: {
      validate: _index.assertNodeType("JSXIdentifier")
    }
  }
});

_index2["default"]("JSXNamespacedName", {
  visitor: ["namespace", "name"],
  aliases: ["JSX"],
  fields: {
    namespace: {
      validate: _index.assertNodeType("JSXIdentifier")
    },
    name: {
      validate: _index.assertNodeType("JSXIdentifier")
    }
  }
});

_index2["default"]("JSXOpeningElement", {
  builder: ["name", "attributes", "selfClosing"],
  visitor: ["name", "attributes"],
  aliases: ["JSX", "Immutable"],
  fields: {
    name: {
      validate: _index.assertNodeType("JSXIdentifier", "JSXMemberExpression")
    },
    selfClosing: {
      "default": false,
      validate: _index.assertValueType("boolean")
    },
    attributes: {
      validate: _index.chain(_index.assertValueType("array"), _index.assertEach(_index.assertNodeType("JSXAttribute", "JSXSpreadAttribute")))
    }
  }
});

_index2["default"]("JSXSpreadAttribute", {
  visitor: ["argument"],
  aliases: ["JSX"],
  fields: {
    argument: {
      validate: _index.assertNodeType("Expression")
    }
  }
});

_index2["default"]("JSXText", {
  aliases: ["JSX"],
  builder: ["value"],
  fields: {
    value: {
      validate: _index.assertValueType("string")
    }
  }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9uYXZlci8uYXRvbS9wYWNrYWdlcy9idWlsZC1ndWxwL3NwZWMvZml4dHVyZS9ub2RlX21vZHVsZXNfYmFiZWwvYmFiZWwtdHlwZXMvbGliL2RlZmluaXRpb25zL2pzeC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUVBLFlBQVksQ0FBQzs7QUFFYixJQUFJLHNCQUFzQixHQUFHLE9BQU8sQ0FBQywrQ0FBK0MsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDOztBQUVqRyxJQUFJLE1BQU0sR0FBRyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUM7O0FBRWhDLElBQUksT0FBTyxHQUFHLHNCQUFzQixDQUFDLE1BQU0sQ0FBQyxDQUFDOztBQUU3QyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsY0FBYyxFQUFFO0FBQ2pDLFNBQU8sRUFBRSxDQUFDLE1BQU0sRUFBRSxPQUFPLENBQUM7QUFDMUIsU0FBTyxFQUFFLENBQUMsS0FBSyxFQUFFLFdBQVcsQ0FBQztBQUM3QixRQUFNLEVBQUU7QUFDTixRQUFJLEVBQUU7QUFDSixjQUFRLEVBQUUsTUFBTSxDQUFDLGNBQWMsQ0FBQyxlQUFlLEVBQUUscUJBQXFCLENBQUM7S0FDeEU7QUFDRCxTQUFLLEVBQUU7QUFDTCxjQUFRLEVBQUUsSUFBSTtBQUNkLGNBQVEsRUFBRSxNQUFNLENBQUMsY0FBYyxDQUFDLFlBQVksRUFBRSxlQUFlLEVBQUUsd0JBQXdCLENBQUM7S0FDekY7R0FDRjtDQUNGLENBQUMsQ0FBQzs7QUFFSCxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsbUJBQW1CLEVBQUU7QUFDdEMsU0FBTyxFQUFFLENBQUMsTUFBTSxDQUFDO0FBQ2pCLFNBQU8sRUFBRSxDQUFDLEtBQUssRUFBRSxXQUFXLENBQUM7QUFDN0IsUUFBTSxFQUFFO0FBQ04sUUFBSSxFQUFFO0FBQ0osY0FBUSxFQUFFLE1BQU0sQ0FBQyxjQUFjLENBQUMsZUFBZSxFQUFFLHFCQUFxQixDQUFDO0tBQ3hFO0dBQ0Y7Q0FDRixD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cUIsQ0FBQztLQUN4RTtBQUNELGVBQVcsRUFBRTtBQUNYLGVBQVMsRUFBRSxLQUFLO0FBQ2hCLGNBQVEsRUFBRSxNQUFNLENBQUMsZUFBZSxDQUFDLFNBQVMsQ0FBQztLQUM1QztBQUNELGNBQVUsRUFBRTtBQUNWLGNBQVEsRUFBRSxNQUFNLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxlQUFlLENBQUMsT0FBTyxDQUFDLEVBQUUsTUFBTSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDLGNBQWMsRUFBRSxvQkFBb0IsQ0FBQyxDQUFDLENBQUM7S0FDeEk7R0FDRjtDQUNGLENBQUMsQ0FBQzs7QUFFSCxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsb0JBQW9CLEVBQUU7QUFDdkMsU0FBTyxFQUFFLENBQUMsVUFBVSxDQUFDO0FBQ3JCLFNBQU8sRUFBRSxDQUFDLEtBQUssQ0FBQztBQUNoQixRQUFNLEVBQUU7QUFDTixZQUFRLEVBQUU7QUFDUixjQUFRLEVBQUUsTUFBTSxDQUFDLGNBQWMsQ0FBQyxZQUFZLENBQUM7S0FDOUM7R0FDRjtDQUNGLENBQUMsQ0FBQzs7QUFFSCxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsU0FBUyxFQUFFO0FBQzVCLFNBQU8sRUFBRSxDQUFDLEtBQUssQ0FBQztBQUNoQixTQUFPLEVBQUUsQ0FBQyxPQUFPLENBQUM7QUFDbEIsUUFBTSxFQUFFO0FBQ04sU0FBSyxFQUFFO0FBQ0wsY0FBUSxFQUFFLE1BQU0sQ0FBQyxlQUFlLENBQUMsUUFBUSxDQUFDO0tBQzNDO0dBQ0Y7Q0FDRixDQUFDLENBQUMiLCJmaWxlIjoiL1VzZXJzL25hdmVyLy5hdG9tL3BhY2thZ2VzL2J1aWxkLWd1bHAvc3BlYy9maXh0dXJlL25vZGVfbW9kdWxlc19iYWJlbC9iYWJlbC10eXBlcy9saWIvZGVmaW5pdGlvbnMvanN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogQGZsb3cgKi9cblxuXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0ID0gcmVxdWlyZShcImJhYmVsLXJ1bnRpbWUvaGVscGVycy9pbnRlcm9wLXJlcXVpcmUtZGVmYXVsdFwiKVtcImRlZmF1bHRcIl07XG5cbnZhciBfaW5kZXggPSByZXF1aXJlKFwiLi9pbmRleFwiKTtcblxudmFyIF9pbmRleDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9pbmRleCk7XG5cbl9pbmRleDJbXCJkZWZhdWx0XCJdKFwiSlNYQXR0cmlidXRlXCIsIHtcbiAgdmlzaXRvcjogW1wibmFtZVwiLCBcInZhbHVlXCJdLFxuICBhbGlhc2VzOiBbXCJKU1hcIiwgXCJJbW11dGFibGVcIl0sXG4gIGZpZWxkczoge1xuICAgIG5hbWU6IHtcbiAgICAgIHZhbGlkYXRlOiBfaW5kZXguYXNzZXJ0Tm9kZVR5cGUoXCJKU1hJZGVudGlmaWVyXCIsIFwiSlNYTWVtYmVyRXhwcmVzc2lvblwiKVxuICAgIH0sXG4gICAgdmFsdWU6IHtcbiAgICAgIG9wdGlvbmFsOiB0cnVlLFxuICAgICAgdmFsaWRhdGU6IF9pbmRleC5hc3NlcnROb2RlVHlwZShcIkpTWEVsZW1lbnRcIiwgXCJTdHJpbmdMaXRlcmFsXCIsIFwiSlNYRXhwcmVzc2lvbkNvbnRhaW5lclwiKVxuICAgIH1cbiAgfVxufSk7XG5cbl9pbmRleDJbXCJkZWZhdWx0XCJdKFwiSlNYQ2xvc2luZ0VsZW1lbnRcIiwge1xuICB2aXNpdG9yOiBbXCJuYW1lXCJdLFxuICBhbGlhc2VzOiBbXCJKU1hcIiwgXCJJbW11dGFibGVcIl0sXG4gIGZpZWxkczoge1xuICAgIG5hbWU6IHtcbiAgICAgIHZhbGlkYXRlOiBfaW5kZXguYXNzZXJ0Tm9kZVR5cGUoXCJKU1hJZGVudGlmaWVyXCIsIFwiSlNYTWVtYmVyRXhwcmVzc2lvblwiKVxuICAgIH1cbiAgfVxufSk7XG5cbl9pbmRleDJbXCJkZWZhdWx0XCJdKFwiSlNYRWxlbWVudFwiLCB7XG4gIGJ1aWxkZXI6IFtcIm9wZW5pbmdFbGVtZW50XCIsIFwiY2xvc2luZ0VsZW1lbnRcIiwgXCJjaGlsZHJlblwiLCBcInNlbGZDbG9zaW5nXCJdLFxuICB2aXNpdG9yOiBbXCJvcGVuaW5nRWxlbWVudFwiLCBcImNoaWxkcmVuXCIsIFwiY2xvc2luZ0VsZW1lbnRcIl0sXG4gIGFsaWFzZXM6IFtcIkpTWFwiLCBcIkltbXV0YWJsZVwiLCBcIkV4cHJlc3Npb25cIl0sXG4gIGZpZWxkczoge1xuICAgIG9wZW5pbmdFbGVtZW50OiB7XG4gICAgICB2YWxpZGF0ZTogX2luZGV4LmFzc2VydE5vZGVUeXBlKFwiSlNYT3BlbmluZ0VsZW1lbnRcIilcbiAgICB9LFxuICAgIGNsb3NpbmdFbGVtZW50OiB7XG4gICAgICBvcHRpb25hbDogdHJ1ZSxcbiAgICAgIHZhbGlkYXRlOiBfaW5kZXguYXNzZXJ0Tm9kZVR5cGUoXCJKU1hDbG9zaW5nRWxlbWVudFwiKVxuICAgIH0sXG4gICAgY2hpbGRyZW46IHtcbiAgICAgIC8vIHRvZG9cbiAgICB9XG4gIH1cbn0pO1xuXG5faW5kZXgyW1wiZGVmYXVsdFwiXShcIkpTWEVtcHR5RXhwcmVzc2lvblwiLCB7XG4gIGFsaWFzZXM6IFtcIkpTWFwiLCBcIkV4cHJlc3Npb25cIl1cbn0pO1xuXG5faW5kZXgyW1wiZGVmYXVsdFwiXShcIkpTWEV4cHJlc3Npb25Db250YWluZXJcIiwge1xuICB2aXNpdG9yOiBbXCJleHByZXNzaW9uXCJdLFxuICBhbGlhc2VzOiBbXCJKU1hcIiwgXCJJbW11dGFibGVcIl0sXG4gIGZpZWxkczoge1xuICAgIGV4cHJlc3Npb246IHtcbiAgICAgIHZhbGlkYXRlOiBfaW5kZXguYXNzZXJ0Tm9kZVR5cGUoXCJFeHByZXNzaW9uXCIpXG4gICAgfVxuICB9XG59KTtcblxuX2luZGV4MltcImRlZmF1bHRcIl0oXCJKU1hJZGVudGlmaWVyXCIsIHtcbiAgYnVpbGRlcjogW1wibmFtZVwiXSxcbiAgYWxpYXNlczogW1wiSlNYXCIsIFwiRXhwcmVzc2lvblwiXSxcbiAgZmllbGRzOiB7XG4gICAgbmFtZToge1xuICAgICAgdmFsaWRhdGU6IF9pbmRleC5hc3NlcnRWYWx1ZVR5cGUoXCJzdHJpbmdcIilcbiAgICB9XG4gIH1cbn0pO1xuXG5faW5kZXgyW1wiZGVmYXVsdFwiXShcIkpTWE1lbWJlckV4cHJlc3Npb25cIiwge1xuICB2aXNpdG9yOiBbXCJvYmplY3RcIiwgXCJwcm9wZXJ0eVwiXSxcbiAgYWxpYXNlczogW1wiSlNYXCIsIFwiRXhwcmVzc2lvblwiXSxcbiAgZmllbGRzOiB7XG4gICAgb2JqZWN0OiB7XG4gICAgICB2YWxpZGF0ZTogX2luZGV4LmFzc2VydE5vZGVUeXBlKFwiSlNYSWRlbnRpZmllclwiKVxuICAgIH0sXG4gICAgcHJvcGVydHk6IHtcbiAgICAgIHZhbGlkYXRlOiBfaW5kZXguYXNzZXJ0Tm9kZVR5cGUoXCJKU1hJZGVudGlmaWVyXCIpXG4gICAgfVxuICB9XG59KTtcblxuX2luZGV4MltcImRlZmF1bHRcIl0oXCJKU1hOYW1lc3BhY2VkTmFtZVwiLCB7XG4gIHZpc2l0b3I6IFtcIm5hbWVzcGFjZVwiLCBcIm5hbWVcIl0sXG4gIGFsaWFzZXM6IFtcIkpTWFwiXSxcbiAgZmllbGRzOiB7XG4gICAgbmFtZXNwYWNlOiB7XG4gICAgICB2YWxpZGF0ZTogX2luZGV4LmFzc2VydE5vZGVUeXBlKFwiSlNYSWRlbnRpZmllclwiKVxuICAgIH0sXG4gICAgbmFtZToge1xuICAgICAgdmFsaWRhdGU6IF9pbmRleC5hc3NlcnROb2RlVHlwZShcIkpTWElkZW50aWZpZXJcIilcbiAgICB9XG4gIH1cbn0pO1xuXG5faW5kZXgyW1wiZGVmYXVsdFwiXShcIkpTWE9wZW5pbmdFbGVtZW50XCIsIHtcbiAgYnVpbGRlcjogW1wibmFtZVwiLCBcImF0dHJpYnV0ZXNcIiwgXCJzZWxmQ2xvc2luZ1wiXSxcbiAgdmlzaXRvcjogW1wibmFtZVwiLCBcImF0dHJpYnV0ZXNcIl0sXG4gIGFsaWFzZXM6IFtcIkpTWFwiLCBcIkltbXV0YWJsZVwiXSxcbiAgZmllbGRzOiB7XG4gICAgbmFtZToge1xuICAgICAgdmFsaWRhdGU6IF9pbmRleC5hc3NlcnROb2RlVHlwZShcIkpTWElkZW50aWZpZXJcIiwgXCJKU1hNZW1iZXJFeHByZXNzaW9uXCIpXG4gICAgfSxcbiAgICBzZWxmQ2xvc2luZzoge1xuICAgICAgXCJkZWZhdWx0XCI6IGZhbHNlLFxuICAgICAgdmFsaWRhdGU6IF9pbmRleC5hc3NlcnRWYWx1ZVR5cGUoXCJib29sZWFuXCIpXG4gICAgfSxcbiAgICBhdHRyaWJ1dGVzOiB7XG4gICAgICB2YWxpZGF0ZTogX2luZGV4LmNoYWluKF9pbmRleC5hc3NlcnRWYWx1ZVR5cGUoXCJhcnJheVwiKSwgX2luZGV4LmFzc2VydEVhY2goX2luZGV4LmFzc2VydE5vZGVUeXBlKFwiSlNYQXR0cmlidXRlXCIsIFwiSlNYU3ByZWFkQXR0cmlidXRlXCIpKSlcbiAgICB9XG4gIH1cbn0pO1xuXG5faW5kZXgyW1wiZGVmYXVsdFwiXShcIkpTWFNwcmVhZEF0dHJpYnV0ZVwiLCB7XG4gIHZpc2l0b3I6IFtcImFyZ3VtZW50XCJdLFxuICBhbGlhc2VzOiBbXCJKU1hcIl0sXG4gIGZpZWxkczoge1xuICAgIGFyZ3VtZW50OiB7XG4gICAgICB2YWxpZGF0ZTogX2luZGV4LmFzc2VydE5vZGVUeXBlKFwiRXhwcmVzc2lvblwiKVxuICAgIH1cbiAgfVxufSk7XG5cbl9pbmRleDJbXCJkZWZhdWx0XCJdKFwiSlNYVGV4dFwiLCB7XG4gIGFsaWFzZXM6IFtcIkpTWFwiXSxcbiAgYnVpbGRlcjogW1widmFsdWVcIl0sXG4gIGZpZWxkczoge1xuICAgIHZhbHVlOiB7XG4gICAgICB2YWxpZGF0ZTogX2luZGV4LmFzc2VydFZhbHVlVHlwZShcInN0cmluZ1wiKVxuICAgIH1cbiAgfVxufSk7Il19
//# sourceURL=/Users/naver/.atom/packages/build-gulp/spec/fixture/node_modules_babel/babel-types/lib/definitions/jsx.js
