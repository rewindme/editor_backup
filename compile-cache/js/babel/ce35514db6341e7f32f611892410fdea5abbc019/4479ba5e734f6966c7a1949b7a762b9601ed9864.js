

"use strict";

var _interopRequireWildcard = require("babel-runtime/helpers/interop-require-wildcard")["default"];

exports.__esModule = true;
exports._params = _params;
exports._method = _method;
exports.FunctionExpression = FunctionExpression;
exports.ArrowFunctionExpression = ArrowFunctionExpression;

var _babelTypes = require("babel-types");

var t = _interopRequireWildcard(_babelTypes);

function _params(node /*: Object*/) {
  // istanbul ignore next

  var _this = this;

  this.print(node.typeParameters, node);
  this.push("(");
  this.printList(node.params, node, {
    iterator: function iterator(node) {
      if (node.optional) _this.push("?");
      _this.print(node.typeAnnotation, node);
    }
  });
  this.push(")");

  if (node.returnType) {
    this.print(node.returnType, node);
  }
}

function _method(node /*: Object*/) {
  var kind = node.kind;
  var key = node.key;

  if (kind === "method" || kind === "init") {
    if (node.generator) {
      this.push("*");
    }
  }

  if (kind === "get" || kind === "set") {
    this.push(kind + " ");
  }

  if (node.async) this.push("async ");

  if (node.computed) {
    this.push("[");
    this.print(key, node);
    this.push("]");
  } else {
    this.print(key, node);
  }

  this._params(node);
  this.space();
  this.print(node.body, node);
}

function FunctionExpression(node /*: Object*/) {
  if (node.async) this.push("async ");
  this.push("function");
  if (node.generator) this.push("*");

  if (node.id) {
    this.push(" ");
    this.print(node.id, node);
  } else {
    this.space();
  }

  this._params(node);
  this.space();
  this.print(node.body, node);
}

exports.FunctionDeclaration = FunctionExpression;

function ArrowFunctionExpression(node /*: Object*/) {
  if (node.async) this.push("async ");

  if (node.params.length === 1 && t.isIdentifier(node.params[0])) {
    this.print(node.params[0], node);
  } else {
    this._params(node);
  }

  this.push(" => ");

  var bodyNeedsParens = t.isObjectExpression(node.body);

  if (bodyNeedsParens) {
    this.push("(");
  }

  this.print(node.body, node);

  if (bodyNeedsParens) {
    this.push(")");
  }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9uYXZlci8uYXRvbS9wYWNrYWdlcy9idWlsZC1ndWxwL3NwZWMvZml4dHVyZS9ub2RlX21vZHVsZXNfYmFiZWwvYmFiZWwtZ2VuZXJhdG9yL2xpYi9nZW5lcmF0b3JzL21ldGhvZHMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQSxZQUFZLENBQUM7O0FBRWIsSUFBSSx1QkFBdUIsR0FBRyxPQUFPLENBQUMsZ0RBQWdELENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQzs7QUFFbkcsT0FBTyxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7QUFDMUIsT0FBTyxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7QUFDMUIsT0FBTyxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7QUFDMUIsT0FBTyxDQUFDLGtCQUFrQixHQUFHLGtCQUFrQixDQUFDO0FBQ2hELE9BQU8sQ0FBQyx1QkFBdUIsR0FBRyx1QkFBdUIsQ0FBQzs7QUFFMUQsSUFBSSxXQUFXLEdBQUcsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDOztBQUV6QyxJQUFJLENBQUMsR0FBRyx1QkFBdUIsQ0FBQyxXQUFXLENBQUMsQ0FBQzs7QUFFN0MsU0FBUyxPQUFPLENBQUMsSUFBSSxlQUFlOzs7QUFHbEMsTUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDOztBQUVqQixNQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDdEMsTUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUNmLE1BQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLEVBQUU7QUFDaEMsWUFBUSxFQUFFLFNBQVMsUUFBUSxDQUFDLElBQUksRUFBRTtBQUNoQyxVQUFJLElBQUksQ0FBQyxRQUFRLEVBQUUsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUNuQyxXQUFLLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxjQUFj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LENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztHQUNsQyxNQUFNO0FBQ0wsUUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztHQUNwQjs7QUFFRCxNQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDOztBQUVsQixNQUFJLGVBQWUsR0FBRyxDQUFDLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDOztBQUV0RCxNQUFJLGVBQWUsRUFBRTtBQUNuQixRQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0dBQ2hCOztBQUVELE1BQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQzs7QUFFNUIsTUFBSSxlQUFlLEVBQUU7QUFDbkIsUUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztHQUNoQjtDQUNGIiwiZmlsZSI6Ii9Vc2Vycy9uYXZlci8uYXRvbS9wYWNrYWdlcy9idWlsZC1ndWxwL3NwZWMvZml4dHVyZS9ub2RlX21vZHVsZXNfYmFiZWwvYmFiZWwtZ2VuZXJhdG9yL2xpYi9nZW5lcmF0b3JzL21ldGhvZHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBAZmxvdyAqL1xuXG5cInVzZSBzdHJpY3RcIjtcblxudmFyIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkID0gcmVxdWlyZShcImJhYmVsLXJ1bnRpbWUvaGVscGVycy9pbnRlcm9wLXJlcXVpcmUtd2lsZGNhcmRcIilbXCJkZWZhdWx0XCJdO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5fcGFyYW1zID0gX3BhcmFtcztcbmV4cG9ydHMuX21ldGhvZCA9IF9tZXRob2Q7XG5leHBvcnRzLkZ1bmN0aW9uRXhwcmVzc2lvbiA9IEZ1bmN0aW9uRXhwcmVzc2lvbjtcbmV4cG9ydHMuQXJyb3dGdW5jdGlvbkV4cHJlc3Npb24gPSBBcnJvd0Z1bmN0aW9uRXhwcmVzc2lvbjtcblxudmFyIF9iYWJlbFR5cGVzID0gcmVxdWlyZShcImJhYmVsLXR5cGVzXCIpO1xuXG52YXIgdCA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKF9iYWJlbFR5cGVzKTtcblxuZnVuY3Rpb24gX3BhcmFtcyhub2RlIC8qOiBPYmplY3QqLykge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuXG4gIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgdGhpcy5wcmludChub2RlLnR5cGVQYXJhbWV0ZXJzLCBub2RlKTtcbiAgdGhpcy5wdXNoKFwiKFwiKTtcbiAgdGhpcy5wcmludExpc3Qobm9kZS5wYXJhbXMsIG5vZGUsIHtcbiAgICBpdGVyYXRvcjogZnVuY3Rpb24gaXRlcmF0b3Iobm9kZSkge1xuICAgICAgaWYgKG5vZGUub3B0aW9uYWwpIF90aGlzLnB1c2goXCI/XCIpO1xuICAgICAgX3RoaXMucHJpbnQobm9kZS50eXBlQW5ub3RhdGlvbiwgbm9kZSk7XG4gICAgfVxuICB9KTtcbiAgdGhpcy5wdXNoKFwiKVwiKTtcblxuICBpZiAobm9kZS5yZXR1cm5UeXBlKSB7XG4gICAgdGhpcy5wcmludChub2RlLnJldHVyblR5cGUsIG5vZGUpO1xuICB9XG59XG5cbmZ1bmN0aW9uIF9tZXRob2Qobm9kZSAvKjogT2JqZWN0Ki8pIHtcbiAgdmFyIGtpbmQgPSBub2RlLmtpbmQ7XG4gIHZhciBrZXkgPSBub2RlLmtleTtcblxuICBpZiAoa2luZCA9PT0gXCJtZXRob2RcIiB8fCBraW5kID09PSBcImluaXRcIikge1xuICAgIGlmIChub2RlLmdlbmVyYXRvcikge1xuICAgICAgdGhpcy5wdXNoKFwiKlwiKTtcbiAgICB9XG4gIH1cblxuICBpZiAoa2luZCA9PT0gXCJnZXRcIiB8fCBraW5kID09PSBcInNldFwiKSB7XG4gICAgdGhpcy5wdXNoKGtpbmQgKyBcIiBcIik7XG4gIH1cblxuICBpZiAobm9kZS5hc3luYykgdGhpcy5wdXNoKFwiYXN5bmMgXCIpO1xuXG4gIGlmIChub2RlLmNvbXB1dGVkKSB7XG4gICAgdGhpcy5wdXNoKFwiW1wiKTtcbiAgICB0aGlzLnByaW50KGtleSwgbm9kZSk7XG4gICAgdGhpcy5wdXNoKFwiXVwiKTtcbiAgfSBlbHNlIHtcbiAgICB0aGlzLnByaW50KGtleSwgbm9kZSk7XG4gIH1cblxuICB0aGlzLl9wYXJhbXMobm9kZSk7XG4gIHRoaXMuc3BhY2UoKTtcbiAgdGhpcy5wcmludChub2RlLmJvZHksIG5vZGUpO1xufVxuXG5mdW5jdGlvbiBGdW5jdGlvbkV4cHJlc3Npb24obm9kZSAvKjogT2JqZWN0Ki8pIHtcbiAgaWYgKG5vZGUuYXN5bmMpIHRoaXMucHVzaChcImFzeW5jIFwiKTtcbiAgdGhpcy5wdXNoKFwiZnVuY3Rpb25cIik7XG4gIGlmIChub2RlLmdlbmVyYXRvcikgdGhpcy5wdXNoKFwiKlwiKTtcblxuICBpZiAobm9kZS5pZCkge1xuICAgIHRoaXMucHVzaChcIiBcIik7XG4gICAgdGhpcy5wcmludChub2RlLmlkLCBub2RlKTtcbiAgfSBlbHNlIHtcbiAgICB0aGlzLnNwYWNlKCk7XG4gIH1cblxuICB0aGlzLl9wYXJhbXMobm9kZSk7XG4gIHRoaXMuc3BhY2UoKTtcbiAgdGhpcy5wcmludChub2RlLmJvZHksIG5vZGUpO1xufVxuXG5leHBvcnRzLkZ1bmN0aW9uRGVjbGFyYXRpb24gPSBGdW5jdGlvbkV4cHJlc3Npb247XG5cbmZ1bmN0aW9uIEFycm93RnVuY3Rpb25FeHByZXNzaW9uKG5vZGUgLyo6IE9iamVjdCovKSB7XG4gIGlmIChub2RlLmFzeW5jKSB0aGlzLnB1c2goXCJhc3luYyBcIik7XG5cbiAgaWYgKG5vZGUucGFyYW1zLmxlbmd0aCA9PT0gMSAmJiB0LmlzSWRlbnRpZmllcihub2RlLnBhcmFtc1swXSkpIHtcbiAgICB0aGlzLnByaW50KG5vZGUucGFyYW1zWzBdLCBub2RlKTtcbiAgfSBlbHNlIHtcbiAgICB0aGlzLl9wYXJhbXMobm9kZSk7XG4gIH1cblxuICB0aGlzLnB1c2goXCIgPT4gXCIpO1xuXG4gIHZhciBib2R5TmVlZHNQYXJlbnMgPSB0LmlzT2JqZWN0RXhwcmVzc2lvbihub2RlLmJvZHkpO1xuXG4gIGlmIChib2R5TmVlZHNQYXJlbnMpIHtcbiAgICB0aGlzLnB1c2goXCIoXCIpO1xuICB9XG5cbiAgdGhpcy5wcmludChub2RlLmJvZHksIG5vZGUpO1xuXG4gIGlmIChib2R5TmVlZHNQYXJlbnMpIHtcbiAgICB0aGlzLnB1c2goXCIpXCIpO1xuICB9XG59Il19
//# sourceURL=/Users/naver/.atom/packages/build-gulp/spec/fixture/node_modules_babel/babel-generator/lib/generators/methods.js
