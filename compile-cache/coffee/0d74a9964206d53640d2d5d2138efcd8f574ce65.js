(function() {
  var $, ProjectsListView, db, path, utils;

  utils = require('./utils');

  db = require('../lib/db');

  db.updateFilepath(utils.dbPath());

  ProjectsListView = require('../lib/projects-list-view');

  $ = require('atom-space-pen-views').$;

  path = require('path');

  describe("List View", function() {
    var filterEditorView, list, listView, workspaceElement, _ref;
    _ref = [], listView = _ref[0], workspaceElement = _ref[1], list = _ref[2], filterEditorView = _ref[3];
    beforeEach(function() {
      spyOn(db, 'readFile').andCallFake(function(callback) {
        var data, existingPath;
        existingPath = path.join(__dirname);
        data = {
          one: {
            title: 'project one',
            group: 'Test',
            paths: ['/Does/not/exist']
          },
          two: {
            title: 'project two',
            icon: 'icon-bug',
            paths: [existingPath],
            template: 'two'
          },
          three: {
            title: 'a first',
            group: 'a group',
            paths: ['/Does/not/exist/again']
          }
        };
        return callback(data);
      });
      workspaceElement = atom.views.getView(atom.workspace);
      listView = new ProjectsListView();
      return list = listView.list, filterEditorView = listView.filterEditorView, listView;
    });
    it("will list all projects", function() {
      listView.toggle();
      return expect(list.find('li').length).toBe(3);
    });
    it("will let you know if a path is not available", function() {
      listView.toggle();
      expect(list.find('li').eq(0).data('pathMissing')).toBe(true);
      return expect(list.find('li').eq(1).data('pathMissing')).toBe(false);
    });
    it("will add the correct icon to each project", function() {
      var icon1, icon2;
      listView.toggle();
      icon1 = list.find('li[data-project-id="one"]').find('.icon');
      icon2 = list.find('li[data-project-id="two"]').find('.icon');
      expect(icon1.attr('class')).toContain('icon-chevron-right');
      return expect(icon2.attr('class')).toContain('icon-bug');
    });
    describe("When the text of the mini editor changes", function() {
      beforeEach(function() {
        listView.toggle();
        return listView.isOnDom = function() {
          return true;
        };
      });
      it("will only list projects with the correct title", function() {
        filterEditorView.getModel().setText('title:one');
        window.advanceClock(listView.inputThrottle);
        expect(listView.getFilterKey()).toBe('title');
        expect(listView.getFilterQuery()).toBe('one');
        return expect(list.find('li').length).toBe(1);
      });
      it("will only list projects with the correct group", function() {
        filterEditorView.getModel().setText('group:test');
        window.advanceClock(listView.inputThrottle);
        expect(listView.getFilterKey()).toBe('group');
        expect(listView.getFilterQuery()).toBe('test');
        expect(list.find('li').length).toBe(1);
        return expect(list.find('li:eq(0)').find('.project-manager-list-group')).toHaveText('Test');
      });
      it("will only list projects with the correct template", function() {
        filterEditorView.getModel().setText('template:two');
        window.advanceClock(listView.inputThrottle);
        expect(listView.getFilterKey()).toBe('template');
        expect(listView.getFilterQuery()).toBe('two');
        return expect(list.find('li').length).toBe(1);
      });
      return it("will fall back to default filter key if it's not valid", function() {
        filterEditorView.getModel().setText('test:one');
        window.advanceClock(listView.inputThrottle);
        expect(listView.getFilterKey()).toBe(listView.defaultFilterKey);
        expect(listView.getFilterQuery()).toBe('one');
        return expect(list.find('li').length).toBe(1);
      });
    });
    return describe("It sorts the projects in correct order", function() {
      it("sorts after title", function() {
        atom.config.set('project-manager.sortBy', 'title');
        listView.toggle();
        return expect(list.find('li:eq(0)').data('projectId')).toBe("three");
      });
      return it("sort after group", function() {
        atom.config.set('project-manager.sortBy', 'group');
        listView.toggle();
        return expect(list.find('li:eq(0)').data('projectId')).toBe("three");
      });
    });
  });

}).call(this);

//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICIiLAogICJzb3VyY2VSb290IjogIiIsCiAgInNvdXJjZXMiOiBbCiAgICAiL1VzZXJzL25hdmVyLy5hdG9tL3BhY2thZ2VzL3Byb2plY3QtbWFuYWdlci9zcGVjL3Byb2plY3RzLWxpc3Qtdmlldy1zcGVjLmNvZmZlZSIKICBdLAogICJuYW1lcyI6IFtdLAogICJtYXBwaW5ncyI6ICJBQUFBO0FBQUEsTUFBQSxvQ0FBQTs7QUFBQSxFQUFBLEtBQUEsR0FBUSxPQUFBLENBQVEsU0FBUixDQUFSLENBQUE7O0FBQUEsRUFDQSxFQUFBLEdBQUssT0FBQSxDQUFRLFdBQVIsQ0FETCxDQUFBOztBQUFBLEVBRUEsRUFBRSxDQUFDLGNBQUgsQ0FBa0IsS0FBSyxDQUFDLE1BQU4sQ0FBQSxDQUFsQixDQUZBLENBQUE7O0FBQUEsRUFHQSxnQkFBQSxHQUFtQixPQUFBLENBQVEsMkJBQVIsQ0FIbkIsQ0FBQTs7QUFBQSxFQUlDLElBQUssT0FBQSxDQUFRLHNCQUFSLEVBQUwsQ0FKRCxDQUFBOztBQUFBLEVBS0EsSUFBQSxHQUFPLE9BQUEsQ0FBUSxNQUFSLENBTFAsQ0FBQTs7QUFBQSxFQU9BLFFBQUEsQ0FBUyxXQUFULEVBQXNCLFNBQUEsR0FBQTtBQUNwQixRQUFBLHdEQUFBO0FBQUEsSUFBQSxPQUF1RCxFQUF2RCxFQUFDLGtCQUFELEVBQVcsMEJBQVgsRUFBNkIsY0FBN0IsRUFBbUMsMEJBQW5DLENBQUE7QUFBQSxJQUVBLFVBQUEsQ0FBVyxTQUFBLEdBQUE7QUFDVCxNQUFBLEtBQUEsQ0FBTSxFQUFOLEVBQVUsVUFBVixDQUFxQixDQUFDLFdBQXRCLENBQWtDLFNBQUMsUUFBRCxHQUFBO0FBQ2hDLFlBQUEsa0JBQUE7QUFBQSxRQUFBLFlBQUEsR0FBZSxJQUFJLENBQUMsSUFBTCxDQUFVLFNBQVYsQ0FBZixDQUFBO0FBQUEsUUFDQSxJQUFBLEdBQ0U7QUFBQSxVQUFBLEdBQUEsRUFDRTtBQUFBLFlBQUEsS0FBQSxFQUFPLGFBQVA7QUFBQSxZQUNBLEtBQUEs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

//# sourceURL=/Users/naver/.atom/packages/project-manager/spec/projects-list-view-spec.coffee
